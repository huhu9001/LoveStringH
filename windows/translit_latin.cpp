#include"translit.hpp"

namespace lovestringh {
	Transliterator make_latin() {
		static std::map<std::string_view, std::string_view>const dict_3{
			{ "A:-", "\u01DE" }, { "a:-", "\u01DF" },
			{ "AE-", "\u01E2" }, { "Ae-", "\u01E2" }, { "ae-", "\u01E3" },
			{ "O:-", "\u022A" }, { "o:-", "\u022B" },
			{ "U:-", "\u01D5" }, { "u:-", "\u01D6" },
			{ "U-:", "\u1E7A" }, { "u-:", "\u1E7B" },

			{ "AE/", "\u01FC" }, { "Ae/", "\u01FC" }, { "ae/", "\u01FD" },
			{ "I:/", "\u1E2E" }, { "i:/", "\u1E2F" },
			{ "U:/", "\u01D7" }, { "u:/", "\u01D8" },

			{ "U:&", "\u01D9" }, { "u:&", "\u01DA" },

			{ "U:\\", "\u01DB" }, { "u:\\", "\u01DC" },
		}, dict_2{
			{ "AE", "\u00C6" }, { "Ae", "\u00C6" }, { "ae", "\u00E6" },
			{ "CZ", "\u00C7" }, { "Cz", "\u00C7" }, { "cz", "\u00E7" },
			{ "OE", "\u0152" }, { "Oe", "\u0152" }, { "oe", "\u0153" },
			{ "SZ", "\u1E9E" }, { "Sz", "\u1E9E" }, { "sz", "\u00DF" },

			{ "A:", "\u00C4" }, { "a:", "\u00E4" },
			{ "E:", "\u00CB" }, { "e:", "\u00EB" },
			{ "H:", "\u1E26" }, { "h:", "\u1E27" },
			{ "I:", "\u00CF" }, { "i:", "\u00EF" },
			{ "O:", "\u00D6" }, { "o:", "\u00F6" },
			{ "t:", "\u1E97" },
			{ "U:", "\u00DC" }, { "u:", "\u00FC" },
			{ "Y:", "\u0178" }, { "y:", "\u00FF" },

			{ "A-", "\u0100" }, { "a-", "\u0101" },
			{ "E-", "\u0112" }, { "e-", "\u0113" },
			{ "G-", "\u1E20" }, { "g-", "\u1E21" },
			{ "I-", "\u012A" }, { "i-", "\u012B" },
			{ "O-", "\u014C" }, { "o-", "\u014D" },
			{ "U-", "\u016A" }, { "u-", "\u016B" },
			{ "Y-", "\u0232" }, { "y-", "\u0233" },

			{ "A/", "\u00C1" }, { "a/", "\u00E1" },
			{ "C/", "\u0106" }, { "c/", "\u0107" },
			{ "E/", "\u00C9" }, { "e/", "\u00E9" },
			{ "G/", "\u01F4" }, { "g/", "\u01F5" },
			{ "I/", "\u00CD" }, { "i/", "\u00ED" },
			{ "K/", "\u1E30" }, { "k/", "\u1E31" },
			{ "L/", "\u0139" }, { "l/", "\u013A" },
			{ "M/", "\u1E3E" }, { "m/", "\u1E3F" },
			{ "N/", "\u0143" }, { "n/", "\u0144" },
			{ "O/", "\u00D3" }, { "o/", "\u00F3" },
			{ "P/", "\u1E54" }, { "p/", "\u1E55" },
			{ "R/", "\u0154" }, { "r/", "\u0155" },
			{ "S/", "\u015A" }, { "s/", "\u015B" },
			{ "U/", "\u00DA" }, { "u/", "\u00FA" },
			{ "W/", "\u1E82" }, { "w/", "\u1E83" },
			{ "Y/", "\u00DD" }, { "y/", "\u00FD" },
			{ "Z/", "\u0179" }, { "z/", "\u017A" },

			{ "A&", "\u01CD" }, { "a&", "\u01CE" },
			{ "C&", "\u010C" }, { "c&", "\u010D" },
			{ "D&", "\u010E" }, { "d&", "\u010F" },
			{ "E&", "\u011A" }, { "e&", "\u011B" },
			{ "G&", "\u01E6" }, { "g&", "\u01E7" },
			{ "H&", "\u021E" }, { "h&", "\u021F" },
			{ "I&", "\u01CF" }, { "i&", "\u01D0" },
			{ "j&", "\u01F0" },
			{ "K&", "\u01E8" }, { "k&", "\u01E9" },
			{ "L&", "\u013D" }, { "l&", "\u013E" },
			{ "N&", "\u0147" }, { "n&", "\u0148" },
			{ "O&", "\u01D1" }, { "o&", "\u01D2" },
			{ "R&", "\u0158" }, { "r&", "\u0159" },
			{ "S&", "\u0160" }, { "s&", "\u0161" },
			{ "T&", "\u0164" }, { "t&", "\u0165" },
			{ "U&", "\u01D3" }, { "u&", "\u01D4" },
			{ "Z&", "\u017D" }, { "z&", "\u017E" },

			{ "A\\", "\u00C0" }, { "a\\", "\u00E0" },
			{ "E\\", "\u00C8" }, { "e\\", "\u00E8" },
			{ "I\\", "\u00CC" }, { "i\\", "\u00EC" },
			{ "O\\", "\u00D2" }, { "o\\", "\u00F2" },
			{ "U\\", "\u00D9" }, { "u\\", "\u00F9" },
			{ "W\\", "\u1E80" }, { "w\\", "\u1E81" },
			{ "Y\\", "\u1EF2" }, { "y\\", "\u1EF3" },

			{ "A^", "\u00C2" }, { "a^", "\u00E2" },
			{ "E^", "\u00CA" }, { "e^", "\u00EA" },
			{ "I^", "\u00CE" }, { "i^", "\u00EE" },
			{ "O^", "\u00D4" }, { "o^", "\u00F4" },
			{ "U^", "\u00DB" }, { "u^", "\u00FB" },
			{ "Y^", "\u0176" }, { "y^", "\u0177" },
		}, dict_1{
			{ ":", "\u0308" },//Diaeresis
			{ "-", "\u0304" },//Macron
			{ "/", "\u0301" },//Acute
			{ "&", "\u030C" },//Caron
			{ "\\", "\u0300" },//Grave
			{ "^", "\u0302" },//Circumflex
		};
		static std::unique_ptr<Regexoid<char> const> const items[] = {
			Regexoid<char>::Maker<"...">::make(dict_3),
			Regexoid<char>::Maker<"..">::make(dict_2),
			Regexoid<char>::Maker<".">::make(dict_1),
		};
		return Transliterator("Latin (Alt+L)", items);
	}
}